What is the starting point of Angular Application?
Angular Application starts from AppModule.
AppModule is the root module which bootstraps and launches the angular application.

import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';

import { AppComponent } from './app.component';
import { EmployeeComponent } from './employee/employee.component';

@NgModule({
  declarations: [ AppComponent ], // these are the list of components we havecreated in our application
  imports: [ BrowserModule ], // these are the list of modules we have used in our entire application
  providers: [], // these are the list of services we have created in our application
  bootstrap: [AppComponent], // these are the list of  components we use when the application is launched
})
export class AppModule { }

NgModule decarator adds meta data to angular module
If class is decarated with @NgModule then that is called as angular module.

What is a component in Angular 2
A component in Angular is a class with a template and a decorator. So in simple terms a component in Angular is composed of these 3 things
1. Template - Defines the user interface. Contains the HTML, directives and bindings.
2. Class - Contains the code required for template. Just like a class in any object oriented programming language like C# or Java, a class in angular can contain methods and properties. Properties contain the data that we want to display in the view template and methods contain the logic for the view. We use TypeScript to create the class.
3. Decorator - We use the Component decorator provided by Angular to add metadata to the class. A class becomes an Angular component, when it is decorated with the Component decorator.

What is the difference between template and templateUrl?
template is where our html inline code will go, we can write inline html within 2 back tick characters: `<div>for multiline</div>` or for single line '' or ""
templateUrl points to the address of external html file where the actual html exists './app/myComponent.html'

What is the difference between styles and styleUrl?
styles can be used to define the styles with in the same component, where as styleUrl will points to external file './app/myComponentStyles.css'

What is the difference between Interpolation and Property binding
both deals with binding properties of class components to to Html Element properties but not to attributes
Interpolation is a special syntax that Angular converts into a property binding. Interpolation is just a convenient alternative to property binding. 

In some cases like when we need to concatenate strings we have to use interpolation instead of property binding as shown in the example below.
<img src='http://www.testAbc.com/{{imagePath}}' />

When setting an element property to a non-string data value, you must use property binding. In the following example, we are disabling a button by binding to the boolean property isDisabled.
<button [disabled]='isDisabled'>Click me</button>

What is the difference between HTML element attribute and DOM property
Attributes are defined by HTML, where as properties are defined by the DOM.
Attributes initialize DOM properties. Once the initialization complete, the attributes job is done.
Property values can change, where as attribute values can't.
[input id='inputId' type='text' value='Tom']
inputId.getattribute('value') =>'Tom' <= inputId.value but when we make the change for textbox to "Ramu"
inputId.getattribute('value') =>'Tom' // this wont change
inputId.value =>'Ramu' // this will change.

What is Attribute binding? How do we acheive in angular
Property binding and interpolation deals with binding properties of class components to to Html Element properties but not to attributes
All Html elements doenot have corresponding properties for example colspan does not have propertie in this situation we go for attribute binding
It can be done in two ways
<th [attr.colspan]='columnSpanValue'/> or <th attr.colspan={{columnSpanValue}}

Class and style Binding in angular 2?
We can bind the css using class attribute
<button style='color:red; font-weight:normal'/>
<button [style]='color:red; font-weight:normal'/>
<button [style.color]='btnColor'/>
<button [style.fontSize.px]='btnFontSize'/>
<button [ngStyle]='multipleStyles'>
<button class='boldClass'/> //for single 
<burron class='boldClass italicClass'/>//for multiple normal way
<button [class]='boldClass'/>
<button [class.boldClass]='isApplyBoldClass'/> // Add or remove classed isApplyBoldClass is user defined property true or false
<button [ngClass]='multipleClasses'/> // for applying multiple classes
class myComponent{
name:'TOM';
multipleStyles{
font-size:20,
font-color:'red',
font-family:'arial'
};
multiplClasses{
isApplyBoldClass:booleab=true;
let classes={
boldClass:'boldClass',
italicClass:'italicClass'
}
return classes;
}
}

EventBinding: The Event binding can be done in two ways using (eventName) or on-eventName
<button (click)="onClick()">Click me</button> or <button on-click ="onClick()">Click me</button>

Two way binding in Angular is done by combining proprty binding and event binding
<input type="text" [(ngModel)] = 'name'/> // name is some property here and ngModel is present in FormsModule so we have to import first in app Modules

        <tr *ngFor='let employee of employees'>
            <td>{{employee.code}}</td>
            <td>{{employee.name}}</td>
            <td>{{employee.gender}}</td>
            <td>{{employee.annualSalary}}</td>
            <td>{{employee.dateOfBirth}}</td>
        </tr>
        <tr *ngIf="!employees || employees.length==0">
            <td colspan="5">
                No employees to display
            </td>
        </tr>
what is the use of trackBy in *ngFor Structural directive?
Angular by defualt keeps track of objects using the object references.
On each time loading the DOM we get different object references and as a result Angular has no choice but to tear down all the old DOM elements and insert the new DOM elements.
Angular can avoid this churn with trackBy. The trackBy function takes the index and the current item as arguments and returns the unique identifier by which that item should be tracked.  
We can track the objects in customized way 
trackByEmpCode(index: number, employee: any): string {
    return employee.code;
}
<tr *ngFor='let employee of employees; trackBy:trackByEmpCode'>
<tr *ngFor='let employee of employees; trackBy:trackByEmpCode'; let i=index; let isFirst=first; let isLast=last; let isEven='even'; let isOdd='odd'>

What does pipes will do in angular?
pipe character helps to Transform or format data before display ex: uppercase, lowerrcase, fulldate
we can also combine 2 or more pipes together for formating the data 
{{birthDate | date: 'dd/MM/y' | uppercase |}}
{amount | currency:'USD':true:'1.3-4'} // passing 3 parameters to currency pipe 1st param in usd 2nd it should be in symbol, 3rd param it should be  minimum of 1 digit before decimal, min 3 digits after decimal to max 4 digits
 
 Use Interface to define custom types 
 
 export interface IEmployee {
    code: string;
    name: string;
    gender: string;
    annualSalary: number;
    dateOfBirth: string;
    isPrincipal?: boolean; //optional property
}
class Employee implements IEmployee{
  // short hand syntax for defining the properties and assigning them
   constructor(public code:string, public name:string, 
              public gender:string, public anualSalary:number, public dateOfBirth:string){
   }
}

What is ng-container and when to use it?
